{"ast":null,"code":"var _jsxFileName = \"/home/varun/Documents/React/todo-list/src/homepage.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { ThemeProvider, useTheme, createTheme } from '@mui/material/styles';\nimport { amber, deepOrange, grey } from '@mui/material/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getDesignTokens = mode => ({\n  palette: {\n    mode,\n    primary: { ...amber,\n      ...(mode === 'dark' && {\n        main: amber[300]\n      })\n    },\n    ...(mode === 'dark' && {\n      background: {\n        default: deepOrange[900],\n        paper: deepOrange[900]\n      }\n    }),\n    text: { ...(mode === 'light' ? {\n        primary: grey[900],\n        secondary: grey[800]\n      } : {\n        primary: '#fff',\n        secondary: grey[500]\n      })\n    }\n  }\n});\n\nfunction MyApp() {\n  _s();\n\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      bgcolor: 'background.default',\n      color: 'text.primary',\n      borderRadius: 1,\n      p: 3\n    },\n    children: [\"This is a \", theme.palette.mode, \" mode theme with custom palette\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = MyApp;\nconst darkModeTheme = createTheme(getDesignTokens('dark'));\nexport default function DarkThemeWithCustomPalette() {\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkModeTheme,\n    children: /*#__PURE__*/_jsxDEV(MyApp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_c2 = DarkThemeWithCustomPalette;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"DarkThemeWithCustomPalette\");","map":{"version":3,"sources":["/home/varun/Documents/React/todo-list/src/homepage.js"],"names":["React","Box","ThemeProvider","useTheme","createTheme","amber","deepOrange","grey","getDesignTokens","mode","palette","primary","main","background","default","paper","text","secondary","MyApp","theme","display","width","alignItems","justifyContent","bgcolor","color","borderRadius","p","darkModeTheme","DarkThemeWithCustomPalette"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,WAAlC,QAAqD,sBAArD;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,IAA5B,QAAwC,sBAAxC;;;AAEA,MAAMC,eAAe,GAAIC,IAAD,KAAW;AACjCC,EAAAA,OAAO,EAAE;AACPD,IAAAA,IADO;AAEPE,IAAAA,OAAO,EAAE,EACP,GAAGN,KADI;AAEP,UAAII,IAAI,KAAK,MAAT,IAAmB;AACrBG,QAAAA,IAAI,EAAEP,KAAK,CAAC,GAAD;AADU,OAAvB;AAFO,KAFF;AAQP,QAAII,IAAI,KAAK,MAAT,IAAmB;AACrBI,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAER,UAAU,CAAC,GAAD,CADT;AAEVS,QAAAA,KAAK,EAAET,UAAU,CAAC,GAAD;AAFP;AADS,KAAvB,CARO;AAcPU,IAAAA,IAAI,EAAE,EACJ,IAAIP,IAAI,KAAK,OAAT,GACA;AACEE,QAAAA,OAAO,EAAEJ,IAAI,CAAC,GAAD,CADf;AAEEU,QAAAA,SAAS,EAAEV,IAAI,CAAC,GAAD;AAFjB,OADA,GAKA;AACEI,QAAAA,OAAO,EAAE,MADX;AAEEM,QAAAA,SAAS,EAAEV,IAAI,CAAC,GAAD;AAFjB,OALJ;AADI;AAdC;AADwB,CAAX,CAAxB;;AA6BA,SAASW,KAAT,GAAiB;AAAA;;AACf,QAAMC,KAAK,GAAGhB,QAAQ,EAAtB;AACA,sBACE,QAAC,GAAD;AACE,IAAA,EAAE,EAAE;AACFiB,MAAAA,OAAO,EAAE,MADP;AAEFC,MAAAA,KAAK,EAAE,MAFL;AAGFC,MAAAA,UAAU,EAAE,QAHV;AAIFC,MAAAA,cAAc,EAAE,QAJd;AAKFC,MAAAA,OAAO,EAAE,oBALP;AAMFC,MAAAA,KAAK,EAAE,cANL;AAOFC,MAAAA,YAAY,EAAE,CAPZ;AAQFC,MAAAA,CAAC,EAAE;AARD,KADN;AAAA,6BAYaR,KAAK,CAACT,OAAN,CAAcD,IAZ3B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAlBQS,K;UACOf,Q;;;KADPe,K;AAoBT,MAAMU,aAAa,GAAGxB,WAAW,CAACI,eAAe,CAAC,MAAD,CAAhB,CAAjC;AAEA,eAAe,SAASqB,0BAAT,GAAsC;AACnD,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAED,aAAtB;AAAA,2BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;MANuBC,0B","sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { ThemeProvider, useTheme, createTheme } from '@mui/material/styles';\nimport { amber, deepOrange, grey } from '@mui/material/colors';\n\nconst getDesignTokens = (mode) => ({\n  palette: {\n    mode,\n    primary: {\n      ...amber,\n      ...(mode === 'dark' && {\n        main: amber[300],\n      }),\n    },\n    ...(mode === 'dark' && {\n      background: {\n        default: deepOrange[900],\n        paper: deepOrange[900],\n      },\n    }),\n    text: {\n      ...(mode === 'light'\n        ? {\n            primary: grey[900],\n            secondary: grey[800],\n          }\n        : {\n            primary: '#fff',\n            secondary: grey[500],\n          }),\n    },\n  },\n});\n\nfunction MyApp() {\n  const theme = useTheme();\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        bgcolor: 'background.default',\n        color: 'text.primary',\n        borderRadius: 1,\n        p: 3,\n      }}\n    >\n      This is a {theme.palette.mode} mode theme with custom palette\n    </Box>\n  );\n}\n\nconst darkModeTheme = createTheme(getDesignTokens('dark'));\n\nexport default function DarkThemeWithCustomPalette() {\n  return (\n    <ThemeProvider theme={darkModeTheme}>\n      <MyApp />\n    </ThemeProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}