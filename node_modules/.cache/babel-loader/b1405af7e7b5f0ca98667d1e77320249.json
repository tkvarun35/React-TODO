{"ast":null,"code":"var _jsxFileName = \"/home/varun/Documents/React/todo-list/src/homepage.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Box from \"@mui/material/Box\";\nimport { useTheme, ThemeProvider, createTheme } from \"@mui/material/styles\"; // import Brightness4Icon from \"@mui/icons-material/Brightness4\";\n// import Brightness7Icon from \"@mui/icons-material/Brightness7\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorModeContext = /*#__PURE__*/React.createContext({\n  toggleColorMode: () => {}\n});\n\nfunction MyApp() {\n  _s();\n\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      width: \"100%\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      bgcolor: \"background.default\",\n      color: \"text.primary\",\n      borderRadius: 1,\n      p: 3\n    },\n    children: [theme.palette.mode, \" mode\", /*#__PURE__*/_jsxDEV(IconButton, {\n      sx: {\n        ml: 1\n      },\n      onClick: colorMode.toggleColorMode,\n      color: \"inherit\",\n      children: theme.palette.mode === \"dark\" ? /*#__PURE__*/_jsxDEV(Brightness7Icon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Brightness4Icon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"80lvBfk7TN8cUIlLm9bQxIykp7M=\", false, function () {\n  return [useTheme];\n});\n\n_c = MyApp;\nexport default function ToggleColorMode() {\n  _s2();\n\n  const [mode, setMode] = React.useState(\"light\");\n  const colorMode = React.useMemo(() => ({\n    toggleColorMode: () => {\n      setMode(prevMode => prevMode === \"light\" ? \"dark\" : \"light\");\n    }\n  }), []);\n  const theme = React.useMemo(() => createTheme({\n    palette: {\n      mode\n    }\n  }), [mode]);\n  return /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n    value: colorMode,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(MyApp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ToggleColorMode, \"rH2IxS7ra29cpeULm3TREnfglHU=\");\n\n_c2 = ToggleColorMode;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"ToggleColorMode\");","map":{"version":3,"sources":["/home/varun/Documents/React/todo-list/src/homepage.js"],"names":["React","IconButton","Box","useTheme","ThemeProvider","createTheme","ColorModeContext","createContext","toggleColorMode","MyApp","theme","colorMode","useContext","display","width","alignItems","justifyContent","bgcolor","color","borderRadius","p","palette","mode","ml","ToggleColorMode","setMode","useState","useMemo","prevMode"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,QAAT,EAAmBC,aAAnB,EAAkCC,WAAlC,QAAqD,sBAArD,C,CACA;AACA;;;AAEA,MAAMC,gBAAgB,gBAAGN,KAAK,CAACO,aAAN,CAAoB;AAAEC,EAAAA,eAAe,EAAE,MAAM,CAAE;AAA3B,CAApB,CAAzB;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAMC,KAAK,GAAGP,QAAQ,EAAtB;AACA,QAAMQ,SAAS,GAAGX,KAAK,CAACY,UAAN,CAAiBN,gBAAjB,CAAlB;AACA,sBACE,QAAC,GAAD;AACE,IAAA,EAAE,EAAE;AACFO,MAAAA,OAAO,EAAE,MADP;AAEFC,MAAAA,KAAK,EAAE,MAFL;AAGFC,MAAAA,UAAU,EAAE,QAHV;AAIFC,MAAAA,cAAc,EAAE,QAJd;AAKFC,MAAAA,OAAO,EAAE,oBALP;AAMFC,MAAAA,KAAK,EAAE,cANL;AAOFC,MAAAA,YAAY,EAAE,CAPZ;AAQFC,MAAAA,CAAC,EAAE;AARD,KADN;AAAA,eAYGV,KAAK,CAACW,OAAN,CAAcC,IAZjB,wBAaE,QAAC,UAAD;AACE,MAAA,EAAE,EAAE;AAAEC,QAAAA,EAAE,EAAE;AAAN,OADN;AAEE,MAAA,OAAO,EAAEZ,SAAS,CAACH,eAFrB;AAGE,MAAA,KAAK,EAAC,SAHR;AAAA,gBAKGE,KAAK,CAACW,OAAN,CAAcC,IAAd,KAAuB,MAAvB,gBACC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA9BQb,K;UACON,Q;;;KADPM,K;AAgCT,eAAe,SAASe,eAAT,GAA2B;AAAA;;AACxC,QAAM,CAACF,IAAD,EAAOG,OAAP,IAAkBzB,KAAK,CAAC0B,QAAN,CAAe,OAAf,CAAxB;AACA,QAAMf,SAAS,GAAGX,KAAK,CAAC2B,OAAN,CAChB,OAAO;AACLnB,IAAAA,eAAe,EAAE,MAAM;AACrBiB,MAAAA,OAAO,CAAEG,QAAD,IAAeA,QAAQ,KAAK,OAAb,GAAuB,MAAvB,GAAgC,OAAhD,CAAP;AACD;AAHI,GAAP,CADgB,EAMhB,EANgB,CAAlB;AASA,QAAMlB,KAAK,GAAGV,KAAK,CAAC2B,OAAN,CACZ,MACEtB,WAAW,CAAC;AACVgB,IAAAA,OAAO,EAAE;AACPC,MAAAA;AADO;AADC,GAAD,CAFD,EAOZ,CAACA,IAAD,CAPY,CAAd;AAUA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEX,SAAlC;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAED,KAAtB;AAAA,6BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;IA5BuBc,e;;MAAAA,e","sourcesContent":["import * as React from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Box from \"@mui/material/Box\";\nimport { useTheme, ThemeProvider, createTheme } from \"@mui/material/styles\";\n// import Brightness4Icon from \"@mui/icons-material/Brightness4\";\n// import Brightness7Icon from \"@mui/icons-material/Brightness7\";\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\n\nfunction MyApp() {\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        width: \"100%\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        bgcolor: \"background.default\",\n        color: \"text.primary\",\n        borderRadius: 1,\n        p: 3,\n      }}\n    >\n      {theme.palette.mode} mode\n      <IconButton\n        sx={{ ml: 1 }}\n        onClick={colorMode.toggleColorMode}\n        color=\"inherit\"\n      >\n        {theme.palette.mode === \"dark\" ? (\n          <Brightness7Icon />\n        ) : (\n          <Brightness4Icon />\n        )}\n      </IconButton>\n    </Box>\n  );\n}\n\nexport default function ToggleColorMode() {\n  const [mode, setMode] = React.useState(\"light\");\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === \"light\" ? \"dark\" : \"light\"));\n      },\n    }),\n    []\n  );\n\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n        },\n      }),\n    [mode]\n  );\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>\n        <MyApp />\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}